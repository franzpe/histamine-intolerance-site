DB STRUCTURE:
  ☐ user
    ☐ id (int) - PK
    ☐ userName (varchar)
    ☐ password (varchar)
    ☐ firstName (varchar)
    ☐ lastName (varchar)
    ☐ contactEmail (varchar)
    ☐ role (varchar) - FK (roles)

  ☐ roles
    ☐ id (char)
    ☐ name (varchar)

  // Useri mozu mat viacero jedal vo svojom profile
  ☐ userFoods
    ☐ userId (int) - PK FK
    ☐ foodId (int) - PK FK 

  ☐ food
    ☐ id (int) - PK
    ☐ nazov (varchar)
    ☐ histamine level (int)
    ☐ rating (float)
    ☐ description (varchar)

  ☐ histamineLevel
    ☐ value
    ☐ name
    ☐ description
    
  ☐ recipe
    ☐ id (int)
    ☐ name (varchar)
    ☐ creator (int) - FK (user)
    ☐ image (???)
    ☐ procedure (varchar)
    ☐ rating (float(4,2))

  ☐ recipeFoods
    ☐ recipe - PK FK
    ☐ food - PK 
    ☐ quantity
    ☐ unit  

TASKS BEFORE RELEASE:
  ✔ scaffold db structrue create models @done(18-12-08 11:13)
  ✔ scaffold graphql schemas @done(18-12-08 11:13)
  ✔ validations @done(18-12-08 12:58)
  ✔ Sticky footer @done(18-12-18 22:31)
  ✔ client store @done(18-12-18 22:31)
    ✔ authentication bool @done(18-12-18 22:31)
  ✔ Mobile view in recipes adjust @done(18-12-29 19:04)
  ✔ rating formula food @done(18-12-20 21:45)
  ✔ rating styling @done(18-12-29 18:51)
    ✔ 0-49 secondary color @done(18-12-29 18:51)
    ✔ 49.01 - 50.99 yellow 700 @done(18-12-29 18:51)
    ✔ 51 - 100 - grenn[500 -> more percentage] @done(18-12-29 18:51)
  ✔ Facebook login @done(18-12-20 19:23)
    ✔ https://medium.com/techsource-pro/facebook-login-with-react-and-graphql-a128243dc841 @done(18-12-20 19:23)

  RECIPES:
    ☐ filtering, pagination
    ☐ fast action add recipe 
  
  GROCERIES: 
    ✔ design @done(18-12-29 18:25)
    ✔ rate grocery @done(18-12-29 18:24)
    ✔ OPTIMIZE RATING BEHAVIOUR @done(18-12-27 22:58)
    ☐ fast action to show your grocery list
      ✔ style @done(18-12-29 19:39)
      ☐ add concrete route
    ☐ fill the list from swiss list

  PROFILE:
    ✔ basic information @done(19-01-05 21:42)
      ☐ contact email transition into text field, needs to remain the same width
      ☐ translations
    ☐ food list
    ☐ recipes management
  
  BACKEND:
    ☐ redirect uri in facebook login 
    ☐ Change all db tables to InnoDB engine see example down
    ☐ rating formula racipes  
    ✔ rated grocery adds to your profile list @done(18-12-29 19:15)

  MISCELLANEOUS:
    ✔ migrate from apollo boost @done(18-12-29 14:34)
    ✔ reset auth header after the client logs in for apollo client @done(18-12-29 14:35)
      ✔ fixed by migrating from apollo boost and using auth middleware @done(18-12-29 14:35)
      ☐ Trend - text-overflow: elipsess
    ✔ reroute after login to previous page the user was on not the root route @done(19-01-08 16:04)

TASKS AFTER RELEASE: 
  ☐ consider data loader implementation on server

FEATURE:
  ☐ recept sa sklada z potravin kde bude ukazana aj ich znasanlivost
    ☐ recept ma rating
  ☐ pre recept bude vypocitana pravdepodobnost, ze to userovi bude pasovat

notes:
  GRAPHQL GENERATOR:
    https://github.com/dotansimha/graphql-code-generator

  ENGINE=InnoDB pouzivat v Mysql
  example:
    CREATE TABLE NameSubject (
      Autonumber INT NOT NULL AUTO_INCREMENT,
      NameorSubject nvarchar(255),
      PRIMARY KEY (Autonumber)
    ) ENGINE=InnoDB;

data loader :
  https://github.com/gajus/gajus.com-blog/blob/master/posts/using-dataloader-to-batch-requests/index.md
